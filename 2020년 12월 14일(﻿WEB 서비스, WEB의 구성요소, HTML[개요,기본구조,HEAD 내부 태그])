2020년 12월 14일

서비스를 알기 위해서 네트워크를 알아야 한다.
장비와 장비를 통해 연결매채로 정보 공유

LAN - WAN
WAN으로 전세계를 묶은것 인터넷
이렇게 연결만 시켜놓는것은 의미가 없다.
연결시켜놓은 인터네크워크 안에서 서비스를 제공하는 것 = 인터넷
편의, 정보를 제공하고 제공 받는 것 = 서비스
어떤 정보를 제공해주느냐, 받느냐에 따라 다양한 종류의 서비스들이 있다.
그 중에서 많이 사용하는 것이 WEB 서비스

통신을 하기 위해서는 그 서비스를 받고하자는 대상의 장비로 정보를 전달해야 함
다음 장비를 찾아가기 위한 주소 : MAC 주소
각각의 장비들을 유일하게 식별할 수 있는 주소 : IP
IP주소를 가지고는 딱 그 컴퓨터까지 찾아갈 수 있다.
서비스를 받고자 하는 프로그램을 찾아가기 위한 주소 : 포트

----------------------------------------------------------------------------------------------------------

도메인 주소

출발지              목적지
1.1.1.1              2.2.2.2
전세계에 있는 어딘가의 컴퓨터로 데이터 요청을 보내거나 응답을 받고 싶다 = 통신을 하고 싶다
특정 어떤 장비에서 다른 컴퓨터로 통신을 하고 싶은데
통신을 하기 위해서는 아이피주소+포트주소로 요청을 해야 한다.
웹서비스를 하면서도 네이버, 네이트, 구글 등 다양한 컴퓨터들에게 서비스를 요청함
숫자로 된 아이피주소로 요청을하려면 네이버의 아이피주소, 구글의 아이피주소에 요청을 해야 한다.
하지만 아이피주소는 사람에게 익숙하지 않다.
우리가 조금더 편하게 관리하기 위해서 사람은 문자가 익숙하기 때문에 문자로 통신을 하고 싶음
우리 컴퓨터 안에 숫자로된 주소, 문자로 된 주소를 연결을 시켜놓음
2.2.2.2에게 갈때는 naver라고 입력을 할게
3.3.3.3에게 갈때는 google이라고 입력을 할게
이 파일이 바로 hosts파일
이것을 개개인이 관리하다보니까 사이트가 많아지면 많아질수록 개인이 관리하기 힘들어짐
관리해주는 기간을 만들어서 통합적으로 관리하자
이 hosts 파일 자체를 사람들에게 주기적으로 나눠주자
갱신에 대해 바로 적용이 힘들다
서비스가 많아지면 많아질수록 파일안에 들어가야할 내용이 너무 많아짐
파일이 너무커지니까 사람들한테 나눠줄 때 트래픽이 너무 많아짐
그래서 나온 것이 DNS (Domain Name System)
도메인 네임 = 문자로된 주소
네트워크상에 별도의 서버 하나를 만들어 놓음
Name Server (114라고 생각하면 됨)
여기에다가 이 정보들을 다 넣어놓음
나 네이버에 접속하고싶음, Name Server에 물어봄, 2.2.2.2라고 알려줌
내가 직접 접속

문자로된 주소를 찾아가기 위한 방법으로 DNS라는 서비스를 사용한다.

------------------------------------------------------------------------------------------------------------

웹서비스는 인터넷 환경에서 가장 많이 사용하는 서비스
WWW (World Wide Web)
- 네트워크에 연결된 시스템의 정보를 한 위치에서 검색할 수 있는 서비스
- 1989년 CERN(유럽 입자 물리 연구소)의 팀버너스 리(Tim Berners-Lee)에 의해 개발 됨
- Hyper Text를 통해 정보를 교환하는 서비스
   하나의 웹 문서에서 제공하는 연결 주소(링크)를 통해 다른 문서로 이동 함

Web version
- WEB 1.0 (초기 서비스 버전)
   정적인 검색 서비스 제공 (고정된 문서)
- WEB 2.0 (현재 사용되는 기본 서비스 버전)
   동적인 검색 서비스 제공 
   Client에서 생성한 정보(자원)을 서버에 전달하여 다른 Client에서도 공유하도록 서비스 함
   Wikipedia, naver/google 등의 검색 서비스...
- Web 3.0 (Communication 서비스 버전)
   지능형 WEB -> 사용자의 패턴을 분석하여 개인별 맞춤 정보 검색 서비스 제공
   facebook, instagram ...

정적 검색 서비스(누가 요청을 하든 항상 똑같은 내용)
- 단순히 서버에서 만들어서 제공되는 정보만 공유하고 검색하는 서비스
- 서버가 제공하는 모든 정보는 WEB mast(관리자)에 의해서 생성 되고 체계적으로 분류 됨
- 사용자들은 WEB master가 제공하는 카테고리에서 분류된 자료를 검색 함

네트워크 상에서 통신을 하기위한 약속된 규격, 양식 : 프로토콜

동적 검색 서비스(사용자로부터 요청받아 문서 찾는 것은 같음, was라는 놈 하나 더 만들어서 동적인 기능 추가)
- "참여, 공유, 개방"이라는 요소를 목적으로 사용자가 생성한 정보를 서버가 수집하여 
다른 사용자에게 제공하는 서비스
- 클라이언트에서 전달되는 정보를 저장하여 다른 사용자에게 공유 함
   클라이언트의 정보를 동적으로 처리할 수 있는 기능이 추가 됨 -> WAS(Web Application Server)

웹서버는 동적인 기능 처리할 기능이 없음


------------------------------------------------------------------------------------------------------------

WEB의 구성 요소
서비스를 제공받고 제공 받기 위한

WEB의 구성요소
- WEB system -> WEB client(browser ), WEB server, WAS(Web Apllication Server), Database ...
- WEB language -> html, CSS, SSS, SQL ...
- WEB protocol -> HTTP

브라우저를 이용해서 웹서비스를 받는다.
우리가 사용하는 브라우저 ( 인터넷 익스플로러, 크롬, 사파리 등 )
브라우저들마다 생긴 모양과 기능이 다르긴 하지만 
공통적인건 웹에서 사용하는 클라이언트 사이트 스크립트 언어(CSS: HTMP, javascript)를 해석할 수 있다.

웹서버: Apache, IIS , NginX, Tmax WebtoB 이를 수행하기 위한 언어 (HTML, javascript)
WAS: ASP, PHP, Tomcat
동적인 기능을 수행하기 위한 언어(SSS) : ASP, ASP.NET , PHP, JSP
DB Server : MS-SQL DBMS, MY-SQL DBMS, ORACLE, Cubrid, 이를 수행하기 위한 언어(MY-SQL, MY-SQL, ORACLE)

프로토콜 : 통신 규약
어떤 메시지를 주고받느냐에 따라 형식이 다름
내가 네트워크 상에서 통신을 하기 위한 약속을 정해 놓은 것이 통신 규약
어쨌든 네트워크 상에서 주고 받는 다는 것은 글자가 흘러들어가는게 아니라 메세지를 전기 신호로 바꿔서 흘려보내는 것
선을 타고 가는 것이기 때문에 01010101 이런식으로 보내는 것
상대방 컴퓨터에서 전기신호를 받았을 때 해석을 해야함
보는 놈, 받는 놈의 해석이 다르면 메세지를 주고 받을 수가 없음
메세지를 보내는 방식, 받는 방식을 통일 시켜놓은 것이 프로토콜
Hyper Text를 전송하기 위한 약속 : 웹 프로토콜

------------------------------------------------------------------------------------------------------------

Web Client (WEB Browser)
- WEB Service를 위한 사용자 인터페이스를 제공
- 사용자가 지정한 정보로 WEB 요청 데이터(HTTP Request)를 생성하고 전달받은 응답 데이터(HTTP Response)를
파싱하여 화면에 출력 함
  파싱(parsing) -> 데이터를 분석하여 원하는 형태로 추출하는 행위
- 종류 
  Internet Explorer(Microsoft Edge), Chrome, Firefox, Opera, Safari ...

Web Server
- WEB Client가 전달한 요청(HTTP Request)을 해석하여 사용자가 요구하는 WEB page(HTML data)를 응답(HTTP Response)하는 시스템
- 정적인 요청에 대한 요청만 처리할 수 있음 -> HTML 용청
- 동적인 요청이 전달되면 WAS에게 처리를 맡기고 처리 결과에 대해서 HTTP응답을 생성함
    -> SSS 요청
- 종류
   IIS(Internet Information Server), Apache, Netscape, NginX...

WAS (Web Application Server)
- WEB 2.0에서 사용자가 전달하는 데이터를 서버 측에서 처리하기 위해 개발한 서버 프로그램
   사용자가 전달한 값(사용자의 입력 값)을 기반으로 프로그램의 동작이 달라짐 -> 동적인 서비스
- 정적 웹 서버 프로그램과 후면 프로그램(Database) 사이에서 상호 연동 역한을 수행 함
   사용자의 입력 값  -> 정적 서버가 추출 후 WAS에 전달 -> WAS의 명령 코드에 따라 Database에 전달됨
   -> Database의 처리 결과가 WAS에 전달 됨 -> 처리 결과에 맞는 응답 데이터 구성 -> 결과를 사용자에게 전달 함
- 종류 
   .net application Server(ASP), PHP(hypertext Preprocessor), Tomcat(JSP)...

Database (DBMS, DataBase Management System)
- 데이터베이스를 생성, 관리, 사용, 제어하는 프로그램
  데이터베이스 내의 데이터에 접근할 수 있도록 해주는 인터페이스 프로그램
- 데이터의 효율적인 관리와 제어를 제공 함
- 종류
  MS-SQL, My-SQL, Oracle ...

   
------------------------------------------------------------------------------------------------------------

WEB 구성 요소 - Language

HTML (Hyper Text Markup Language)
- WEB data(WEB page) 생성을 위해 사용되는 hypertext를 구성하는 마크업 언어
- "팀 버너스 리"가 기존의 SGML를 단순화 하여 개발 함
- Hyper Text
  Hyper Link를 통해 구성된 다른 정보로 쉽게 연결시켜주는 구조화된 문서
   > Hyper LInk -> 특정 정보의 시작 시점을 알리는 표식
  node ->정보(웹페이지)
  link -> node를 연결하는 고리
  Depth -> 상위 node에서 현재 node까지의 경로 수 (깊이)
  jump -> 선택에 따라 링크를 통해 다음 node로 이동
- 마크업(Markup) 언어
  태그 등을 이용하여 문서나 데이터의 구조를 정의하는 언어 
   (데이터의 크기를 어떻게 할건지, 데이터를 어디에 위치할건지)
- 태그 (tag)
  특정 데이터의 의미, 값을 표현하기 위한 식별자
- 종류
  HTML, HTML 2.0, HTML 3.2, HTML 4.0 , HTML 4.01, XHTML 1.0, HTML 5(2014년 표준 확정)


CSS (Client Side Script)
- Client에서 웹 페이지를 동적으로 표현하기 위해 사용되는 스크립트 언어
- Client에서 처리되는 명령이므로 서버가 source code 원형을 전달 함
- 한번 parsing 동작을 거친 data에 재 접근하여 추가 동작을 지원 함
- 기존의 HTML로 수행될 수 없는 추가 동작을 지원 함
- 종류
   Javascript, Visual Basic Script, Jscript...

CSS
1. Client Side Script - 클라이언트 측에서 동작되는 스크립트 언어 
(웹 서버측에에서 만들어서 코드 자체로 보내준 것을 클라이언트 측에서 우리의 브라우저가 해석)
2. Cascading Style Sheet - 클라이언트 측에서 화면을 예쁘게 꾸며주기 위해 사용되는 언어
3. Cross Site Script - 웹 공격 기법 (XSS로도 표기함)


SSS (Server Side Script)
- Server 프로그램의 동작을 동적으로 처리하기 위해 사용되는 스크립트 언어
- WAS에서 사용되는 언어
- 클라이언트로부터 전달되는 데이터의 처리, 데이터베이스로 연동 되는 명령 등을 처리하기 위해 사용 됨
- Server에서 처리되는 명령이므로 처리 결과만 Client에게 반환 함
- 종류 
  ASP/ASP.net, PHP, JSP, Perl, Python, Ruby, Node.js ...

SQL (Structured Query Language)
- 1970년 IBM에서 개발 됨
- DBMS를 통해 Database를 생성, 관리, 제어하기 위해 사용되는 언어
   DBMS에 정해진 형식의 질의를 전달하여 처리된 결과를 반환 받음
- MS-Sql, My-Sql, Oracle ...

------------------------------------------------------------------------------------------------------------

WEB 구성 요소 - Protocol
통신하기 위한 규약

- HTTP (Hyper Text Transfer Protocol)
하이퍼 텍스트를 전송하기 위한 약속
html로 구성된 WEB data(WEB page)를 전달하기 위해 지정된 통신규약
TCP/IP 네트워크 상에서 Server/Client 기반으로 동작 함
정적인 Text형태의 자원을 메시지 형태로 송/수신 함
Application Layer protocol - TCP port 80 (포트번호 80번을 사용한다)
종류 - HTTP 0.9(1991), HTTP 1.0(1996), HTTP 1.1(1999), HTTP 2.0(2015.5 RFC 7540)

- HTTP 기본 동작
 Clinet -> 자원 요청에 대한 정보를 메시지 형태로 생성하여 Server에게 전달 함
 Server -> 요청된 자원의 정보를 메시지 형태로 생성하여 Client에게 전달 함

- HTTP 특징
 Connectionless (연결 정보를 잃어버린다)
 하나의 HTTP 메시지 (WEB data)를 전송하기 위해 하나의 연결을 맺음
 > 연속된 웹 페이지를 요청해도 한 데이터 단위씩 반복적으로 연결동작을 수행 함
 초기 서버의 지속된 연결에 의한 부하를 줄이기 위해 지원된 방법
 > 다수의 Client에게 서비스를 지원하기 위해 사용 됨

 Stateless
 동일한 Client 의 이전 상태정보를 유지하지 못함
 동적인 서비스에서 사용자의 상태정보를 유지하지 못하므로 동적인 서비스 제공에 문제점이 됨
  > Cookie, session 등의 기술을 통해 해결 함 

------------------------------------------------------------------------------------------------------------

WEB 주소

- URL (Uniform Resource Location)
  통합 자원 위치
  네트워크 상 자원의 위치를 나타내기 위한 규약

- URI (Uniform Resource Identifiers) 식별자가 위치가 될 수 도 있고 이름이 될 수도 있다.
  통합 자원 식별 자
  자원을 균일하게 식별하는 ID
  URL 보다 상위 개념으로 URL과 URN을 모두 포함 (URI = URL + URN)

- URN (Uniform Resource Name)
  통합 자원 이름
  이름으로 자원을 찾는 방식
  해석 가능한 프로그램이 있어야 동작 


----------------------------------------------------------------------------------------------------------

HTML 개요

* HTML
웹에서 정보를 표현할 목적으로 만든 마크업 언어 (Hyper Text Markup Language)
웹 페이지를 작성하기 위해 사용되는 언어로 웹 브라우저에게 보일 문자열과
이를 감싸는 일종의 해석 기호인 태그들로 이루어짐

- 마크업과 마크업 언어
마크업(태그)은 문서의 논리적인 구조를 정의하고
 출력 장치에 어떤 형태로 보일 것인지 지시하는 역할
마크업 언어는 마크업(태그)의 형식과 규칙을 정의한 언어

* HTML5 특징
- 구조적 설계 지원(시멘틱)
- 그래픽 및 멀티미디어 기능 강화
- CSS3 및 Javascript 지원
- 다양한 API 제공
- 모바일 웹 지원 및 장치 접근 가능(배터리 정보, 카메라, GPS 등)
- 웹 브라우저가 서버와 양방향 통신 가능
데이터를 서버로 부터 받기만 했다면 이제는 양방향으로 통신한다.
- 인터넷이 연결되지 않은 상태에서도 애플리케이션 동작

* 구성요소
<p          align  =  'center '>    HTML/CSS      </p>
시작태그    속성      속성 값       내부 문자    종료 태그 
             정렬을   가운데로 해라


태그(Tag) 
'<'와 '>'로 묶인 명령어
시작태그(<태그>)와 종료태그(</테그>)를 한쌍으로 이용
각각의 요소를 표현하기 위한 방식
각각의 요소를 구현하기 위한 방식
각각의 태그 안에는 다양한 속성(옵션)들이 들어갈 수 있다.

요소(Element)
시작태그와 종료태그로 이루어진 모든 명령어
하나의 HTML문서는 요소들의 집합

속성(Attribute)
요소의 시작태그에만 사용 / 명령어 구체와 역할 (끝 태그에는 못들어감)
여러 개의 속성을 사용할 수 있으며 속성의 구분은 공백
속성과 속성값은 대입연산자로 연결을 시켜준다.

변수/속성값(Argument)
속성이 가지는 값, 값 입력 시 "" 혹은 ''를 이용


* 주의 사항
- 태그는 대,소문자를 구분하지 않으나 소문자를 권장함
<HTML>
<html>
<Html>
다 똑같음

- 시작 태그로 시작하면 반드시 종료 태그로 종료
특정 태그들은 끝 태그가 필요 없는 태그들이 있음
기본적으로는 시작/끝태그 설정해준다고 생각하면 되는데 
줄 바꿈(엔터) 같은 애들은 영역이 필요 없다 -> 끝태그 없어도 된다.

- 파일 확장자는 반드시 html 또는 htm으로 설정
WAS랑 같이 사용하면 WAS의 확장자로 사용할 수 있음

- 문자의 공백은 몇 개를 입력하든 한 개만 인식하므로
공백을 추가하기 위해서 특수기호 &nbsp;를 이용해야 함
hello      bye (공백 다섯칸)
-> hello bye 
html은 기본적으로 공백, 엔터 몇개가 들어가든 한개만 인식한다.
여러칸을 띄어주고 싶으면 메타문자 (&nbsp; - 특수한 기능을 가진 문자)를 이용한다.


----------------------------------------------------------------------------------------------------------

HTML5 기본 구조

* <!docktype html>  -> 문서 유형 이 밑에 있는 태그들, 명령문들을 어떤 버전으로 해석 할 것인지


* <html> </html>
html문서 시작, 끝 표시
lang은 이 페이지가 어느 나라 언어로 되어있는지를 의미
- 검색 엔진이 페이지 검색 시에 참고, 검색 사이트에서 특정 언어 제외할 때 사용

속성
html 뒤에 붙는 lang을 속성이라고 함
ex. <html lang="ko">

속성 값
속성에 대한 값을 설정한 것이 속성 값
lang의 속성 값으로는 "설정 언어"가 올 수 있음




* <!-- --> (범위 주석)
HTML에서 사용하는 주석
코드 작성 내용에 대해 설명하는 곳에 사용
브라우저는 주석 부분을 해석하지 않고 넘어감


<! > (한줄 주석)



----------------------------------------------------------------------------------------------------------


[편집프로그램]
1. Visual Studio Code
 - 홈페이지에서 다운로드
 - https://code.visualstudio.com/

2. 패키지 설치
 - 한글패키지
	korean Language Pack for Visual Studio Code
 - VSCode 내 가상 웹서버
	Live Server
 - HTML 실시간 미리보기
	Quick HTML Previewer
 - 시작태그/끝내그 동시 수정
	Auto Rename Tag

3. 폴더 및 파일 열기 후 작업


----------------------------------------------------------------------------------------------------------

HEAD 내부 태그

* <title></title>
페이지 제목을 나타내는 태그
타이틀로 열여주고 타이틀로 종료
<title> 페이지 이름 </title>

* <meta>
헤더 내부에서 사용하는 태그로 메타 테이터로 html문서가 가지고 있는
유용한 정보를 담아두는 곳, 문서 정보를 검색 엔진에 전달
<meta name/http-equiv:"속성명" content="속성내용">

문서에 대한 다양한 정보들을 검색 엔진에 전달하거나 문서 내용을 정의해주는 것

- http-equiv 속성
설정의 정의해주는 것
meta 요소에 정의된 명령을 먼저 실행 후 페이지 로딩,
문서의 초기 정보를 나타냄
(페이지 설정을 해주는 속성)

content-language : 기본언어 설정(페이지 작성언어)
content-type : MIME설정 및 문서의 문자셋 설정(encoding)
X-UA-compatiable : 호환성 설정 
refresh : 페이지 리로드하거나 다른 페이지로 이동
Content-Script-Type : 스크립트형식 지정(javascript/VBscript)
Content-Style-Type : 스타일 시트 형식지정(css)

- name 속성
설명을 정의해놓는 것
http-equiv와 같은 의미

application-name : 웹어플리케이션 이름
author : 페이지의 저자
description : 페이지를 설명하는 내용
generator : 페이지를 생성한 프로그램 표시
keywords : 검색어로 사용, ','로 구분하여 여러 단어 입력 가능
robots : 검색로봇의 검색제한
(robots는 index, follow로 나누어 설정)


* link
문서를 외부의 문서와 연결하기 위해 사용
CSS파일이나 웹 폰트 사용 시 주로 연결

<link rel ="관련 속성" type = "MIME" href = "문서위치"/>

속성
href : 연결한 파일의 경로 지정
rel : 링크가 형성하는 관계 지정
media : 연결문자가 표시될 장치 또는 미디어 유형
type : MIME 타입 지정 

* base
페이지의 링크가 상대 경로로 되었을 때 그 기준이 될 경로 지정
링크를 어떻게 오픈할 것인지 결정
<base href = "경로" [target = "키워드"]>
다른 페이지에서 나를 링크했을 때 그 때 어떻게 오픈할건가

target 키워드
_self : 그 위치에서 열기
_parent : 링크의 바로 상위 페이지에서 열기
_top : 최상위 페이지에서 열기
_black : 새 창으로 열기

밑에서 다른 링크들을 클릭했을 때 그 링크들 경로를 지정해줄건데
그 경로들을 만약에 상대 경로로 지정했을 때 어떻게 어디에서 얘를 찾아줄것인가

절대 경로 :처음부터 전체 경로를 다 적어 주는 것
상대 경로 


* <style></style>
태그의 스타일을 지정해주는 태그로 CSS속성을 HTML내에 직접 쓸 때 사용
<style>CSS구문</style>



https://www.w3schools.com/
